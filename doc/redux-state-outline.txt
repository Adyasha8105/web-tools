
{

	user: {
		fetchStatus: [ FETCH_INVALID | FETCH_ONGOING | FETCH_SUCCEEDED | FETCH_FAILED ],
    isLoggedIn: bool,
    key: string,
    email: string
	},

  topics: {
    all: {
      fetchStatus: [ FETCH_INVALID | FETCH_ONGOING | FETCH_SUCCEEDED | FETCH_FAILED ],
      list: [ list of topic JSON objects ]
    },
    selected: {
      id: [id of topic selected],
      info: {
        fetchStatus: [ FETCH_INVALID | FETCH_ONGOING | FETCH_SUCCEEDED | FETCH_FAILED ],
        // all the basic info about the selected topic
      },
      filters: {
        snapshotId: [id of current snapshot],
        timespanId: [id of current snapshot],
      },
      snapshots: {
        fetchStatus: [ FETCH_INVALID | FETCH_ONGOING | FETCH_SUCCEEDED | FETCH_FAILED ],
        list: [ // list of JSON snapshot objects in the selected topic ]
      }
      timespans: {
        fetchStatus: [ FETCH_INVALID | FETCH_ONGOING | FETCH_SUCCEEDED | FETCH_FAILED ],
        list: [ // list of JSON timespan objects in the selected snapshot of the selected topic  ]
      }
      summary: {
        topStories: {
          fetchStatus: [ FETCH_INVALID | FETCH_ONGOING | FETCH_SUCCEEDED | FETCH_FAILED ],
          sort: [ social | inlink ]
          continuation_id: number,
          stories: // list of JSON story objects,
          timeslice: // JSON object about timespan,
        },
        topMedia: {
          fetchStatus: [ FETCH_INVALID | FETCH_ONGOING | FETCH_SUCCEEDED | FETCH_FAILED ],
          sort: [ social | inlink ]
          continuation_id: number,
          stories: // list of JSON story objects,
          timeslice: // JSON object about timespan,
        },
        topWords: {
          fetchStatus: [ FETCH_INVALID | FETCH_ONGOING | FETCH_SUCCEEDED | FETCH_FAILED ],
          list: [ // list of JSON word objects ],
        },
        sentenceCounts: {
          fetchStatus: [ FETCH_INVALID | FETCH_ONGOING | FETCH_SUCCEEDED | FETCH_FAILED ],
          count: [int],
          split: {
            counts: [ // ordered list of {count,date} objects ],
            gap: [ +1DAY | +3DAYS | +7DAYS]
            end: 'YYYY-MM-DD',
            start: 'YYYY-MM-DD',
          }
        }
      },
      media: {
        fetchStatus: [ FETCH_INVALID | FETCH_ONGOING | FETCH_SUCCEEDED | FETCH_FAILED ],
        continuation_id: number,
        stories: // list of JSON story objects,
        timeslice: // JSON object about timespan,
      },
      story: {
        fetchStatus: [ FETCH_INVALID | FETCH_ONGOING | FETCH_SUCCEEDED | FETCH_FAILED ],
        story: // JSON object about the story
      },
    },
sources: {
    all: {
      fetchStatus: [ FETCH_INVALID | FETCH_ONGOING | FETCH_SUCCEEDED | FETCH_FAILED ],
      list: {
        // itemId => summary dict
      },
    },
    selected: {
      id: [id of item selected],
      info: {
        fetchStatus: [ FETCH_INVALID | FETCH_ONGOING | FETCH_SUCCEEDED | FETCH_FAILED ],
        // all the basic info about the selected topic
      }
      details: {
        topWords: {
          fetchStatus: [ FETCH_INVALID | FETCH_ONGOING | FETCH_SUCCEEDED | FETCH_FAILED ],
          list: [ // list of JSON word objects ],
        },
        sentenceCounts: {
            fetchStatus: [ FETCH_INVALID | FETCH_ONGOING | FETCH_SUCCEEDED | FETCH_FAILED ],
            total: [int],
            gap: [ +1DAY | +3DAYS | +7DAYS]
            end: 'YYYY-MM-DD',
            start: 'YYYY-MM-DD',
            list: [ // ordered list of {count,date} objects ],
          
        },
      },
    },
 


  }



  form: {
    //managed by form helper library
  },

  routing: {
    // managed by react-router
  }

}