
{

	user: {
		fetchStatus: [ FETCH_INVALID | FETCH_ONGOING | FETCH_SUCCEEDED | FETCH_FAILED ],
    isLoggedIn: bool,
    key: string,
    email: string
	},

  topics: {
    all: {
      fetchStatus: [ FETCH_INVALID | FETCH_ONGOING | FETCH_SUCCEEDED | FETCH_FAILED ],
      list: {
        // controversy_id => summary dict
      },
    },
    selected: {
      id: [id of controversy selected],
      filters: {
        snapshotId: [id of current snapshot],
        timespanId: [id of current snapshot],
      },
      snapshots: {
        fetchStatus: [ FETCH_INVALID | FETCH_ONGOING | FETCH_SUCCEEDED | FETCH_FAILED ],
        list: [ // list of JSON snapshot objects in the selected topic ]
      }
      timespans: {
        fetchStatus: [ FETCH_INVALID | FETCH_ONGOING | FETCH_SUCCEEDED | FETCH_FAILED ],
        list: [ // list of JSON timespan objects in the selected snapshot of the selected topic  ]
      }
      summary: {
        info: {
          fetchStatus: [ FETCH_INVALID | FETCH_ONGOING | FETCH_SUCCEEDED | FETCH_FAILED ],
          // all the fields the API returns about a single controversy
        },
        topStories: {
          fetchStatus: [ FETCH_INVALID | FETCH_ONGOING | FETCH_SUCCEEDED | FETCH_FAILED ],
          sort: [ social | inlink ]
          list: [ // list of JSON story objects ],
        },
        topMedia: {
          fetchStatus: [ FETCH_INVALID | FETCH_ONGOING | FETCH_SUCCEEDED | FETCH_FAILED ],
          sort: [ social | inlink ]
          list: [ // list of JSON media objects ],
        },
        topWords: {
          fetchStatus: [ FETCH_INVALID | FETCH_ONGOING | FETCH_SUCCEEDED | FETCH_FAILED ],
          list: [ // list of JSON word objects ],
        }
      },
    },
  }

  form: {
    //managed by form helper library
  },

  routing: {
    // managed by react-router
  }

}