
{

  brand: {
    mastheadText: "html string to use in the header instead of the tool name",
  },

	user: {
		fetchStatus: [ FETCH_INVALID | FETCH_ONGOING | FETCH_SUCCEEDED | FETCH_FAILED ],
    isLoggedIn: bool,
    key: string,
    email: string,
    errorMessage: string
	},

  topics: {
    all: {
      fetchStatus: [ FETCH_INVALID | FETCH_ONGOING | FETCH_SUCCEEDED | FETCH_FAILED ],
      topics: [ list of topic JSON objects ]
      link_ids: { standard links info }
    },
    favorite: {
      fetchStatus: [ FETCH_INVALID | FETCH_ONGOING | FETCH_SUCCEEDED | FETCH_FAILED ],
      topics: [ list of topic JSON objects ]    
    },
    selected: {
      id: [id of topic selected],
      info: {
        fetchStatus: [ FETCH_INVALID | FETCH_ONGOING | FETCH_SUCCEEDED | FETCH_FAILED ],
        // all the basic info about the selected topic
      },
      filters: {
        snapshotId: [id of current snapshot],
        timespanId: [id of current timespan],
        focusId: [id of current focus],
      },
      snapshots: {
        fetchStatus: [ FETCH_INVALID | FETCH_ONGOING | FETCH_SUCCEEDED | FETCH_FAILED ],
        list: [ // list of JSON snapshot objects in the selected topic ]
      }
      timespans: {
        fetchStatus: [ FETCH_INVALID | FETCH_ONGOING | FETCH_SUCCEEDED | FETCH_FAILED ],
        list: [ // list of JSON timespan objects in the selected snapshot of the selected topic  ]
        isVisible: [ true | false ],
        selectedPeriod: [ monthly | weekly | daily | custom ],
        selectedId: [ id of timespan currently selected (dupe of topics.selected.filters.timespanId) ]
        selected: [ timespan object that is currently selected ]
      }
      summary: {
        topStories: {
          fetchStatus: [ FETCH_INVALID | FETCH_ONGOING | FETCH_SUCCEEDED | FETCH_FAILED ],
          sort: [ social | inlink ]
          continuation_id: number,
          stories: // list of JSON story objects,
          timespan: // JSON object about timespan,
        },
        topMedia: {
          fetchStatus: [ FETCH_INVALID | FETCH_ONGOING | FETCH_SUCCEEDED | FETCH_FAILED ],
          sort: [ social | inlink ]
          continuation_id: number,
          stories: // list of JSON story objects,
          timespan: // JSON object about timespan,
        },
        topWords: {
          fetchStatus: [ FETCH_INVALID | FETCH_ONGOING | FETCH_SUCCEEDED | FETCH_FAILED ],
          list: [ // list of JSON word objects ],
        },
        sentenceCounts: {
          fetchStatus: [ FETCH_INVALID | FETCH_ONGOING | FETCH_SUCCEEDED | FETCH_FAILED ],
          count: [int],
          split: {
            counts: [ // ordered list of {count,date} objects ],
            gap: [ +1DAY | +3DAYS | +7DAYS]
            end: 'YYYY-MM-DD',
            start: 'YYYY-MM-DD',
          }
        },
        storyTotals: {
          fetchStatus: [ FETCH_INVALID | FETCH_ONGOING | FETCH_SUCCEEDED | FETCH_FAILED ],
          counts: {
            total: [number],
            filtered: [number]
          }
        }
      },
      media: {
        fetchStatus: [ FETCH_INVALID | FETCH_ONGOING | FETCH_SUCCEEDED | FETCH_FAILED ],
        continuation_id: number,
        media: // list of JSON story objects,
        timespan: // JSON object about timespan,
      },
      stories: {
        fetchStatus: [ FETCH_INVALID | FETCH_ONGOING | FETCH_SUCCEEDED | FETCH_FAILED ],
        continuation_id: number,
        stories: // list of JSON story objects,
        timespan: // JSON object about timespan,
      }
      story: {
        fetchStatus: [ FETCH_INVALID | FETCH_ONGOING | FETCH_SUCCEEDED | FETCH_FAILED ],
        info: { // JSON object about the story },
        words: {
          fetchStatus: [ FETCH_INVALID | FETCH_ONGOING | FETCH_SUCCEEDED | FETCH_FAILED ],
          list: // list of JSON objects
        },
        inlinks: {
          fetchStatus: [ FETCH_INVALID | FETCH_ONGOING | FETCH_SUCCEEDED | FETCH_FAILED ],
          stories: // list of story JSON objects
        },
        outlinks: {
          fetchStatus: [ FETCH_INVALID | FETCH_ONGOING | FETCH_SUCCEEDED | FETCH_FAILED ],
          stories: // list of story JSON objects
        },
      },
      mediaSource: {
        fetchStatus: [ FETCH_INVALID | FETCH_ONGOING | FETCH_SUCCEEDED | FETCH_FAILED ],
        media: // JSON object about the story
      },
      focalSets: {
        all: {
          fetchStatus: [ FETCH_INVALID | FETCH_ONGOING | FETCH_SUCCEEDED | FETCH_FAILED ],
          list: [ array of json focalSet objects },
        },
        foci: {
          fetchStatus: [ FETCH_INVALID | FETCH_ONGOING | FETCH_SUCCEEDED | FETCH_FAILED ],
          list: [ array of json focus objects],
          selected: { json object of the selected focus },
        },
        definitions: {
          fetchStatus: [ FETCH_INVALID | FETCH_ONGOING | FETCH_SUCCEEDED | FETCH_FAILED ],
          list: [ array of json focalSet objects },
        }
        create: {
          currentStep: [1|2|3|4],
          properties: {
            name: "string",
            focalSetId: number,
            focalTechnique: "string",
          },
        }
      },
      permissions: {
        fetchState: [ FETCH_INVALID | FETCH_ONGOING | FETCH_SUCCEEDED | FETCH_FAILED ],
        list: [ array of json permission objects that apply to this topic },
      }
    },
sources: {
    all: {
      fetchStatus: [ FETCH_INVALID | FETCH_ONGOING | FETCH_SUCCEEDED | FETCH_FAILED ],
      list: {
        // itemId => summary dict
      },
    },
    selected: {
      id: [id of item selected],
      info: {
        fetchStatus: [ FETCH_INVALID | FETCH_ONGOING | FETCH_SUCCEEDED | FETCH_FAILED ],
        // all the basic info about the selected topic
      }
      details: {
        topWords: {
          fetchStatus: [ FETCH_INVALID | FETCH_ONGOING | FETCH_SUCCEEDED | FETCH_FAILED ],
          list: [ // list of JSON word objects ],
        },
        sentenceCounts: {
            fetchStatus: [ FETCH_INVALID | FETCH_ONGOING | FETCH_SUCCEEDED | FETCH_FAILED ],
            total: [int],
            gap: [ +1DAY | +3DAYS | +7DAYS]
            end: 'YYYY-MM-DD',
            start: 'YYYY-MM-DD',
            list: [ // ordered list of {count,date} objects ],
          
        },
      },
    },
 


  }



  form: {
    //managed by form helper library
  },

  routing: {
    // managed by react-router
  }

}